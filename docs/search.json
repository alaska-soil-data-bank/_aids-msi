[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "_aids-msi",
    "section": "",
    "text": "Preface\nThis quarto book contains job aids for working with MSI resources. It is a distillation of MSI help resources and workflows implemented on MSI systems as a part of the Alaska Soil Data Bank project.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#msi-websites",
    "href": "index.html#msi-websites",
    "title": "_aids-msi",
    "section": "MSI Websites",
    "text": "MSI Websites",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "msi-systems-access.html",
    "href": "msi-systems-access.html",
    "title": "1  MSI Systems Access",
    "section": "",
    "text": "1.1 ssh\nIt appears that ssh is the best for basic file and maintenance tasks. One question I have however is what is the “default” compute resource you are using when you do this. It seems I can do basic operations in python on large datasets without much of a problem, however question about what happens when you try larger projects or more demanding models #to-do\nIf you are simply doing work with file transfers or want to see what is on your Tier 1 storage, just ssh in. The simplest way to do this natively on a Mac is to use OpenSSH, which is pre-installed on Mac OSX. To do this, open the terminal application (Applications &gt; Utilities &gt; Terminal) and type:\nMy username (x500) is jeli0026, you would simply use your own. NOTE: if you are not on a umn campus network, then you will need to VPN in first, using the Cisco AnyConnect Client. If you are on a UMN network, then you don’t need the VPN.\nYou will then be prompted to enter your password - this should be your UMN password. This will be followed by a Duo authentication request and options. Once you have approved the Duo authentication request, you are in.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>MSI Systems Access</span>"
    ]
  },
  {
    "objectID": "msi-systems-access.html#ssh",
    "href": "msi-systems-access.html#ssh",
    "title": "1  MSI Systems Access",
    "section": "",
    "text": "ssh jeli0026\\@agate.msi.umn.edu\\",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>MSI Systems Access</span>"
    ]
  },
  {
    "objectID": "msi-systems-access.html#msi-file-structure-storage-and-basic-navigation",
    "href": "msi-systems-access.html#msi-file-structure-storage-and-basic-navigation",
    "title": "1  MSI Systems Access",
    "section": "1.2 MSI file structure, storage, and basic navigation",
    "text": "1.2 MSI file structure, storage, and basic navigation\n\n1.2.1 Home directory - Tier 1 storage?\nOnce you are in, you will be in your default directory, which is (I believe) also your Tier 1 storage. As group PI, I currently have 1Tb of storage allotted for the entire group, and if you are one of my group members, you will be counting towards that total. To check where you are, just print working directory:\npwd\nMy home directory is “/users/2/jeli0026”.\n\n\n1.2.2 Scratch - local and global?\nwhat is the difference? and how much storage #to-do - note I should make a table about this\n\n\n1.2.3 Tier 2 Storage\nUnclear the use case for this, but here is the documentation: MSI data retention and protection.\n\n\n1.2.4 Basic navigation\nYou can do basic navigation of files and folders using the command line, for example listing all files and folders in a directory:\nls -a\nOr changing directories - to go up:\n\ncd ..\n\nTo change directories within an existing directory:\n\ncd newdirectory\n\n…where newdirectory is the directory name you would like to change to. Al lot more basic commands in the Software Carpentry cheatsheet here.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>MSI Systems Access</span>"
    ]
  },
  {
    "objectID": "msi-systems-access.html#open-on-demand-for-programmatic-work-or-jupyter-notebook-or-rstudio",
    "href": "msi-systems-access.html#open-on-demand-for-programmatic-work-or-jupyter-notebook-or-rstudio",
    "title": "1  MSI Systems Access",
    "section": "1.3 Open On Demand for programmatic work or Jupyter notebook or Rstudio",
    "text": "1.3 Open On Demand for programmatic work or Jupyter notebook or Rstudio\nGo to MSI Open On Demand and spin up a virtual machine (many options). Haven’t explored this much yet. Be sure to leave Notebook Root empty so it defaults to the home directory. #to-do",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>MSI Systems Access</span>"
    ]
  },
  {
    "objectID": "msi-python.html",
    "href": "msi-python.html",
    "title": "2  Accessing and Using Python on MSI Resources",
    "section": "",
    "text": "2.1 Python in the Terminal\nThe MSI documentation for this is good. In the Python MSI page go to the “Documentation” tab and for general terminal use look at Linux. Here is what I have been doing:\nThen spin up the Python interpreter:\nNow you are ready to code!\nTo end your session or exit the python interpreter just",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Accessing and Using Python on MSI Resources</span>"
    ]
  },
  {
    "objectID": "msi-python.html#python-in-the-terminal",
    "href": "msi-python.html#python-in-the-terminal",
    "title": "2  Accessing and Using Python on MSI Resources",
    "section": "",
    "text": "module load python3\n#this loads the [Anaconda Python 3 distribution](https://msi.umn.edu/our-resources/msi-software/anaconda) available through MSI\n\nipython\n\n\n\nexit()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Accessing and Using Python on MSI Resources</span>"
    ]
  },
  {
    "objectID": "msi-python.html#python-through-jupyter-notebook-on-an-msi-ondemand-virtual-machine",
    "href": "msi-python.html#python-through-jupyter-notebook-on-an-msi-ondemand-virtual-machine",
    "title": "2  Accessing and Using Python on MSI Resources",
    "section": "2.2 Python through Jupyter notebook on an MSI OnDemand Virtual Machine",
    "text": "2.2 Python through Jupyter notebook on an MSI OnDemand Virtual Machine\nI need to work to understand more why packages and some operations are not loading successfully here. May be because you need to restart the kernel more often or things just aren’t pointing to the right place. #to-do",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Accessing and Using Python on MSI Resources</span>"
    ]
  },
  {
    "objectID": "data-transfer-msi.html",
    "href": "data-transfer-msi.html",
    "title": "3  Data Transfer to and from MSI compute platform",
    "section": "",
    "text": "3.1 Globus\nGlobus is the preferred and probably easiest way to transfer data to and from the MSI platform. This can (in theory) be used to transfer data from Box to MSI, from local storage to MSI, and from GEMS to MSI.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Transfer to and from MSI compute platform</span>"
    ]
  },
  {
    "objectID": "data-transfer-msi.html#globus",
    "href": "data-transfer-msi.html#globus",
    "title": "3  Data Transfer to and from MSI compute platform",
    "section": "",
    "text": "3.1.1 Globus: Local Storage to MSI\nI followed these instructions to successfully set up a Globus endpoint for my local machine and then successfully used Globus to transfer data to my MSI home folder.\n\n\n3.1.2 Globus: GEMS to MSI\nI found this tutorial here but when I follow it I cannot find my GEMS endpoint, which I suppose should be gemsumn#gems_jeli0026_at_umn_edu.\nI have a help ticket in to hopefully resolve. #to-do\n\n\n3.1.3 Globus: Box to MSI\nI have a help ticket in for this one. Should be possible in theory but something needs to be enabled at the Enterprise level. #to-do.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Transfer to and from MSI compute platform</span>"
    ]
  },
  {
    "objectID": "data-transfer-msi.html#command-line-interface-cli",
    "href": "data-transfer-msi.html#command-line-interface-cli",
    "title": "3  Data Transfer to and from MSI compute platform",
    "section": "3.2 Command Line Interface (CLI)",
    "text": "3.2 Command Line Interface (CLI)\nThe other possibility is to do these transfers through the command line interface (according to Irf). I have not done this yet, but apparently it is possible. However I don’t see any possibilities for that in the MSI File Transfer Tutorial here. Irf says an scp protocol might work, but it looks to me like this is only from a local machine. Maybe also look into FileZilla? This is important because we need a connection to the Google Cloud Console bucket that Timm maintains in order to directly pull covariates instead of putting them local and then putting them up on MSI (although this is a workaround if necessary).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Transfer to and from MSI compute platform</span>"
    ]
  },
  {
    "objectID": "singularity-docker-containers.html",
    "href": "singularity-docker-containers.html",
    "title": "4  Working with Docker Images on MSI Resources",
    "section": "",
    "text": "4.1 Singularity in place of docker\nDue to security concerns, MSI does not allow direct import and use of Docker images. Instead, you need to use Singularity, which, like docker, has a repository of images that can be accessed. These are .SIF files. You can build a .sif from an existing docker image, however. Then you can store it in your home directory.\nI used the “Singularity and Containers” tutorial (from 2020) to do this. There may be some outdated issues but it seemed to generally work.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Working with Docker Images on MSI Resources</span>"
    ]
  },
  {
    "objectID": "singularity-docker-containers.html#building-an-sif-file-from-a-docker-image",
    "href": "singularity-docker-containers.html#building-an-sif-file-from-a-docker-image",
    "title": "4  Working with Docker Images on MSI Resources",
    "section": "4.2 Building an sif file from a docker image",
    "text": "4.2 Building an sif file from a docker image\nfirst load singularity\nmodule load singularity\nthen build an sif from a docker image. NOTE: need the docker image pointer. In this example I am using my docker image which is nicjelinski/wosis-latest-r-extract:v0.1\n\nsingularity run docker://nicjelinski/wosis-latest-r-extract:v0.1",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Working with Docker Images on MSI Resources</span>"
    ]
  }
]